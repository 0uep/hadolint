# Runs on pull requests against master

name: Release

on:
  # Trigger the workflow on the new 'v*' tag created
  push:
    tags:
      - "v*"

jobs:
  create_release:
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:

    - name: Check out
      uses: actions/checkout@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false


  build_artifact:
    needs: [create_release]
    name: ${{ matrix.os }} / ${{ github.ref }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-latest
        - os: ubuntu-latest
        - os: windows-latest

    steps:

    # setup:

    - name: Check out
      uses: actions/checkout@v2

    - name: Set tag name
      uses: little-core-labs/get-git-tag@v3.0.2
      id: tag
      with:
        tagRegex: "v(.*)"
        tagRegexGroup: 1

    - name: Setup Haskell
      id: setup-haskell-cabal
      uses: actions/setup-haskell@v1.1.4

    - name: Freeze
      run: cabal freeze

    # cache

    - name: Cache store
      uses: actions/cache@v2.1.4
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ hashFiles('cabal.project.freeze') }}

    #release

    - name: Build binary
      run: |
        mkdir dist
        cabal install exe:hadolint --install-method=copy --overwrite-policy=always --installdir=dist --ghc-options=-fPIC --flags="static"

    - if: matrix.os == 'windows-latest'
      name: Set extension to .exe on Windows
      uses: allenevans/set-env@v2.0.0
      with:
        EXT: '.exe'

    - name: Set binary OS name
      uses: allenevans/set-env@v2.0.0
      with:
        BINARY_OS: ${{ runner.os }}

    - if: matrix.os == 'macos-latest'
      name: Set binary OS name on Macos
      uses: allenevans/set-env@v2.0.0
      with:
        BINARY_OS: 'Darwin'

    - name: Set binary path name
      uses: allenevans/set-env@v2.0.0
      with:
        BINARY_PATH: ./dist/hadolint${{ env.EXT }}

    - name: Compress binary
      uses: svenstaro/upx-action@2.0.1
      with:
        file: ${{ env.BINARY_PATH }}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.BINARY_PATH }}
        asset_name: hadolint-${{ env.BINARY_OS }}-x86_64${{ env.EXT }}
        asset_content_type: application/octet-stream
